import React, { useState } from 'react';
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  StyleSheet,
  KeyboardAvoidingView,
  Platform,
  Keyboard,
  Alert
} from 'react-native';

const LoginScreen = () => {
  const [phoneNumber, setPhoneNumber] = useState('');
  const [errorMessage, setErrorMessage] = useState('');

  const isValidPhoneNumber = (number) => {
    const phoneRegex = /^(0[3|5|7|8|9])+([0-9]{8})\b/;
    return phoneRegex.test(number.replace(/\s+/g, '')); // Bỏ khoảng trắng rồi kiểm tra định dạng
  };

  const handleContinue = () => {
    Keyboard.dismiss(); // Ẩn bàn phím khi nhấn nút
    if (isValidPhoneNumber(phoneNumber)) {
      console.log('Số điện thoại:', phoneNumber);
      setErrorMessage('');
      // Tiếp tục logic ở đây, ví dụ điều hướng sang màn hình tiếp theo
    } else {
      setErrorMessage('Số điện thoại không hợp lệ. Vui lòng nhập đúng định dạng.');
    }
  };

  const handleInputChange = (input) => {
    // Loại bỏ ký tự không phải số
    const formattedInput = input.replace(/[^\d]/g, '');

    // Tự động định dạng thành "xxx xxx xxxx"
    const formattedNumber = formattedInput
      .replace(/(\d{3})(\d{3})(\d{4})/, '$1 $2 $3')
      .trim();

    setPhoneNumber(formattedNumber);

    // Xác thực theo thời gian thực
    if (!isValidPhoneNumber(formattedNumber) && formattedNumber.length === 13) {
      setErrorMessage('Số điện thoại không hợp lệ');
    } else {
      setErrorMessage('');
    }
  };

  return (
    <KeyboardAvoidingView
      style={styles.container}
      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}
    >
      <View style={styles.innerContainer}>
        <Text style={styles.title}>Đăng nhập</Text>
        <Text style={styles.subTitle}>Nhập số điện thoại</Text>
        <Text style={styles.description}>
          Dùng số điện thoại để đăng nhập hoặc đăng ký tài khoản tại OneHousing Pro
        </Text>

        <TextInput
          style={styles.input}
          placeholder="Số điện thoại"
          keyboardType="phone-pad"
          value={phoneNumber}
          onChangeText={handleInputChange}
          secureTextEntry={false} // Hiển thị số dưới dạng ký tự thường, vì bạn yêu cầu không hiện kí tự sau khi nhập
          placeholderTextColor="#aaa" // Màu nhạt cho placeholder
        />

        {errorMessage ? <Text style={styles.errorText}>{errorMessage}</Text> : null}

        <TouchableOpacity style={styles.button} onPress={handleContinue}>
          <Text style={styles.buttonText}>Tiếp tục</Text>
        </TouchableOpacity>
      </View>
    </KeyboardAvoidingView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    backgroundColor: '#fff',
  },
  innerContainer: {
    paddingHorizontal: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  subTitle: {
    fontSize: 18,
    marginBottom: 5,
  },
  description: {
    fontSize: 14,
    color: 'gray',
    marginBottom: 20,
  },
  input: {
    borderBottomWidth: 1,
    borderBottomColor: '#ccc',
    fontSize: 18,
    paddingVertical: 10,
    marginBottom: 20,
  },
  button: {
    backgroundColor: '#ddd',
    paddingVertical: 15,
    alignItems: 'center',
    borderRadius: 5,
  },
  buttonText: {
    fontSize: 18,
    color: '#000',
  },
  errorText: {
    color: 'red',
    fontSize: 14,
    marginBottom: 10,
  },
});

export default LoginScreen;
